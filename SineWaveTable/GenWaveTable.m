close all;
clear all;
clf;

% Generate 64 points of single-cycle sine wave 
frequency = 1000;
timeperiod = 1/frequency;
amplitude = 2047;
dcoffset = 2047;
%t=0.00025:0.0000158:1.25*timeperiod;           % 64 data points
%t=0.00025:0.00000782:1.25*timeperiod;          % 128 data points
 t=0.00025:0.000001955:1.25*timeperiod;         % 512 data points
sinedata=dcoffset+amplitude*cos(2*pi*frequency*t);
plot(t,sinedata)
return  
resultcount = size(sinedata)(2)               % 2nd column is count

headerfile = "sine.h";
author = "chris sutton";
delete (headerfile);
headerfileID = fopen(headerfile,'a');

fprintf(headerfileID, '/** \n');
fprintf(headerfileID, ' * @file %s \n', headerfile);
fprintf(headerfileID, ' * @author %s \n', author);
fprintf(headerfileID, ' * @brief  \n');
fprintf(headerfileID, ' * @version 0.1 \n');
fprintf(headerfileID, ' * @date %s \n', date());
fprintf(headerfileID, ' * @copyright Copyright (c) 2020 \n');
fprintf(headerfileID, ' * Generated by GNU Octave.\n');
fprintf(headerfileID, ' */ \n\n');

fprintf(headerfileID, '#ifndef __SINE_H__\n');
fprintf(headerfileID, '#define __SINE_H__\n\n');

fprintf(headerfileID, '#define SINE_DATA_SIZE %d\n\n', resultcount);

%fprintf(headerfileID, "// SINE WAVE TABLE DATA: Freq=%d(Hz) TimePeriod=%d Amplitude=%d dcoffset=%d\n", frequency, timeperiod, amplitude, dcoffset);
fprintf(headerfileID, 'uint32_t sine_data_table[SINE_DATA_SIZE] = {\n\t');


colcount=0;
% Iterate the matrix result, insert comma, but not after last item
for i = 1:resultcount
   fprintf(headerfileID, '%d', int32(sinedata(i)));
   if(i != resultcount)
    fprintf(headerfileID, ", ");
   endif
   colcount=colcount+1;
   if(colcount > 10)
    colcount=0;
    fprintf(headerfileID, '\n\t');
   endif
endfor

fprintf(headerfileID, '\n};\n\t');
fprintf(headerfileID, '\n\n');

fprintf(headerfileID, '#endif //__SINE_H__\n\n');

fclose(headerfileID);