/*
 * FreqOutput.c
 *
 *  Created on: 9 May 2020
 *      Author: chris
 */

#ifndef SRC_SIGNALMANAGER_FREQOUTPUT_C_
#define SRC_SIGNALMANAGER_FREQOUTPUT_C_

#include "FreqOutput.h"

#include "tim.h"

#include "SignalManager.h"

eFreq_Preset eNewFreqPreset = FPRESET_100HZ;

/*
 *
 *
 *
 */
void FreqO_ModifyOutput()
{
	if( (eNewFreqPreset == FPRESET_100KHZ) || ((eNewFreqPreset == FPRESET_1KHZ))
			TIM8->ARR = SM_GetEncoderValue(ENCODER_FORWARD) * FREQ_ENCODER_MAG;
}

/*
 *
 *
 *
 */
uint32_t FreqO_GetOutputFreq()
{
	return TIM8->ARR;
}

/*
 *
 *
 *
 */
void FreqO_ApplyPreset(eFreq_Preset pPreset)
{
	switch(pPreset)
	{
		case FPRESET_1HZ:
			TIM8->PSC = 0x0002;
			TIM8->ARR = 0xb5ff;
			ENCODER_TIMER->CNT = TIM8->ARR;
			eNewFreqPreset = FPRESET_1HZ;
			break;
		case FPRESET_100HZ:
			TIM8->PSC = 0x0000;
			TIM8->ARR = 0x36bf;
			ENCODER_TIMER->CNT = TIM8->ARR;
			eNewFreqPreset = FPRESET_100HZ;
			break;
		case FPRESET_1KHZ:
			TIM8->PSC = 0x0000;
			TIM8->ARR = 0x0570;
			ENCODER_TIMER->CNT = TIM8->ARR;
			eNewFreqPreset = FPRESET_1KHZ;
			break;
		case FPRESET_100KHZ:
			TIM8->PSC = 0x0000;
			TIM8->ARR = 0x0008;
			ENCODER_TIMER->CNT = TIM8->ARR;
			eNewFreqPreset = FPRESET_100KHZ;
			break;
	}
}

eFreq_Preset FreqO_GetFPreset()
{
	return eNewFreqPreset;
}

#endif /* SRC_SIGNALMANAGER_FREQOUTPUT_C_ */
