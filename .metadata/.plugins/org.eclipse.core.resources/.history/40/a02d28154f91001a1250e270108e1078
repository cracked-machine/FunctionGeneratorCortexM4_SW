/*
 * EventManager.c
 *
 *  Created on: May 8, 2020
 *      Author: chris
 */


#include "EventManager.h"

#include "dac.h"

#include <stdio.h>

#include "pysine.h"
#include "pysquare.h"
#include "pyunitimpulse.h"
#include "pysaw.h"
#include "pysaw_rev.h"
#include "pytriangle.h"

// function prototypes
void EM_SetNewEvent(eSystemEvent pEvent);
void _ClearEvent();

eSystemState _FuncAdjustHandler(void);
eSystemState _FreqAdjustHandler(void);
eSystemState _AmplAdjustHandler(void);
eSystemState _BiasAdjustHandler(void);
eSystemState _AdjustConfirmedHandler(void);

eSystemState eNextState = Idle_State;
eSystemEvent eNewEvent;

eOutput_mode eNewOutMode = Sine_Out_Mode;

/*
 *
 * 	Main state machine for event process
 *
 */
void EM_ProcessEvent()
{

	switch(eNextState)
	{
		case Idle_State:
			if(eNewEvent == Func_Select_Event)
			{
				eNextState = _FuncAdjustHandler();
			}
			if(eNewEvent == Freq_Select_Event)
			{
				eNextState = _FreqAdjustHandler();
			}
			if(eNewEvent == Ampl_Select_Event)
			{
				eNextState = _AmplAdjustHandler();
			}
			if(eNewEvent == Bias_Select_Event)
			{
				eNextState = _BiasAdjustHandler();
			}
			if(eNewEvent == Adjust_Confirmed_Event)
			{
				eNextState = _AdjustConfirmedHandler();
			}
			break;

/*		case Func_Select_state:

			break;

		case Freq_Select_state:

			break;

		case Ampl_Select_state:

			break;

		case Bias_Select_state:

			break;
*/
		default:
			break;
	}

}

/*
 *
 *	Business logic for FunctionAdjust events
 *
 */
eSystemState _FuncAdjustHandler(void)
{
#ifdef EM_SWV_DEBUG
	printf("FunctionAdjust Event captured\n");
#endif
	HAL_DAC_Stop_DMA(&hdac1, DAC1_CHANNEL_1);
	HAL_DAC_Start_DMA(&hdac1, DAC1_CHANNEL_1, triangle_data_table, SINE_DATA_SIZE, DAC_ALIGN_12B_R);
	_ClearEvent();
	return Idle_State;
}

/*
 *
 *	Business logic for FreqAdjust events
 *
 */
eSystemState _FreqAdjustHandler(void)
{
#ifdef EM_SWV_DEBUG
	printf("FreqAdjust Event captured\n");
#endif
	_ClearEvent();
	return Idle_State;
}

/*
 *
 *	Business logic for AmplitudeAdjust events
 *
 */
eSystemState _AmplAdjustHandler(void)
{
#ifdef EM_SWV_DEBUG
	printf("AmplitudeAdjust Event captured\n");
#endif
	_ClearEvent();
	return Idle_State;
}

/*
 *
 *	Business logic for BiasAdjust events
 *
 */
eSystemState _BiasAdjustHandler(void)
{
#ifdef EM_SWV_DEBUG
	printf("BiasAdjust Event captured\n");
#endif
	_ClearEvent();
	return Idle_State;
}

/*
 *
 *	Business logic for AdjustConfirmed events
 *
 */
eSystemState _AdjustConfirmedHandler(void)
{
#ifdef EM_SWV_DEBUG
	printf("AdjustConfirmed Event captured\n");
#endif
	_ClearEvent();
	return Idle_State;
}


/*
 *
 * 	Set by NVIC interrupt handlers
 *
 */
void EM_SetNewEvent(eSystemEvent pEvent)
{
	eNewEvent = pEvent;
}

/*
 *
 * Reset the eNewEvent member back to idle
 *
 */
void _ClearEvent()
{
	eNewEvent = Idle_Event;
}
