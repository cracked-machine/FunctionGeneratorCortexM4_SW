/*
 * FunctionOutput.c
 *
 *  Created on: 9 May 2020
 *      Author: chris
 */


#include "FunctionOutput.h"
#include "EventManager.h"
#include "DisplayManager.h"

#include "dac.h"
#include "tim.h"


#include "pysquare.h"
#include "pyunitimpulse.h"
#include "pysaw.h"
#include "pysaw_rev.h"
#include "pytriangle.h"

#include "SignalManager.h"

uint32_t *pOriginalDataTable = sine_data_table_1300;

void FuncO_Init()
{
	for(int i = 0; i < SINE_DATA_SIZE; i++)
		aModdedDataTable[i] = sine_data_table_1300[i];
}


/*
 *	Array of objects for Function Presets and their encoder positions for func preset menu
 */
Func_Preset_Encoder_Pos_t aFuncPresetEncoderPos[MAX_NUM_FUNC_PRESETS] =
{
	{ SINE_FUNC_MODE,		20 },
	{ SQUARE_FUNC_MODE,		16 },
	{ SAW_FUNC_MODE,		12 },
	{ REV_SAW_FUNC_MODE,	8 },
	{ TRIANGLE_FUNC_MODE, 	4 },
	{ IMPULSE_FUNC_MODE, 	0 }

};

/*
 * 		eDefaultFuncPreset set by SignalManager
 */
Func_Preset_Encoder_Pos_t *pNewFuncPresetEncoderPos = &aFuncPresetEncoderPos[eDefaultFuncPreset];

uint8_t FuncPresetEncoderRange = 20;





eOutput_mode FO_GetOutputMode();
//void FuncO_SetOutputMode(eOutput_mode pNewMode);

// signal output function
eOutput_mode eNewOutMode = SINE_FUNC_MODE;

/*
 *
 *	@brief
 *
 *	@param None
 *	@retval None
 *
 */
void FuncO_ModifyOutput(uint16_t pEncoderValue)
{


	switch(pEncoderValue)
	{
		case 0:
		case 1:
		case 2:

			FuncO_ApplyPreset_Fast(SINE_FUNC_MODE);
			break;
		case 3:
		case 4:
		case 5:
		case 6:

			FuncO_ApplyPreset_Fast(SQUARE_FUNC_MODE);

			break;
		case 7:
		case 8:
		case 9:
		case 10:

			FuncO_ApplyPreset_Fast(SAW_FUNC_MODE);
			break;
		case 11:
		case 12:
		case 13:
		case 14:

			FuncO_ApplyPreset_Fast(REV_SAW_FUNC_MODE);
			break;
		case 15:
		case 16:
		case 17:
		case 18:

			FuncO_ApplyPreset_Fast(TRIANGLE_FUNC_MODE);
			break;
		case 19:
		case 20:
		case 21:
		case 22:
		case 23:

			FuncO_ApplyPreset_Fast(IMPULSE_FUNC_MODE);
			break;
	}
}

/*
 *
 *	@brief	Set function output preset by index
 *
 *	@param pPresetEnum the enum literal for the preset. Should be one of the following:
 *
 *

 *	@retval None
 *
 */
void FuncO_ApplyPreset_Fast(eOutput_mode pPresetEnum)
{

	switch(pPresetEnum)
	{
		case SINE_FUNC_MODE:

			pOriginalDataTable = sine_data_table_1300;

			VPP_ApplyPreset_Fast(VPP_GetVppPresetObject()->Vpp_literal);

			pNewFuncPresetEncoderPos = &aFuncPresetEncoderPos[0];

			HAL_DAC_Stop_DMA(&hdac1, DAC1_CHANNEL_1);
			HAL_DAC_Start_DMA(&hdac1, DAC1_CHANNEL_1, (uint32_t*)aModdedDataTable, SINE_DATA_SIZE, DAC_ALIGN_12B_R);
			break;

		case SQUARE_FUNC_MODE:

			pOriginalDataTable = square_data_table_1300;

			VPP_ApplyPreset_Fast(VPP_GetVppPresetObject()->Vpp_literal);

			pNewFuncPresetEncoderPos = &aFuncPresetEncoderPos[1];
			HAL_DAC_Stop_DMA(&hdac1, DAC1_CHANNEL_1);
			HAL_DAC_Start_DMA(&hdac1, DAC1_CHANNEL_1, (uint32_t*)aModdedDataTable, SQUARE_DATA_SIZE, DAC_ALIGN_12B_R);
			break;

		case SAW_FUNC_MODE:

			pOriginalDataTable = saw_data_table_1300;

			VPP_ApplyPreset_Fast(VPP_GetVppPresetObject()->Vpp_literal);

			pNewFuncPresetEncoderPos = &aFuncPresetEncoderPos[2];
			HAL_DAC_Stop_DMA(&hdac1, DAC1_CHANNEL_1);
			HAL_DAC_Start_DMA(&hdac1, DAC1_CHANNEL_1, (uint32_t*)aModdedDataTable, SAW_DATA_SIZE, DAC_ALIGN_12B_R);
			break;

		case REV_SAW_FUNC_MODE:

			pOriginalDataTable = saw_rev_data_table_1300;

			VPP_ApplyPreset_Fast(VPP_GetVppPresetObject()->Vpp_literal);

			pNewFuncPresetEncoderPos = &aFuncPresetEncoderPos[3];
			HAL_DAC_Stop_DMA(&hdac1, DAC1_CHANNEL_1);
			HAL_DAC_Start_DMA(&hdac1, DAC1_CHANNEL_1, (uint32_t*)aModdedDataTable, SAW_REV_DATA_SIZE, DAC_ALIGN_12B_R);
			break;

		case TRIANGLE_FUNC_MODE:

			pOriginalDataTable = triangle_data_table_1300;

			VPP_ApplyPreset_Fast(VPP_GetVppPresetObject()->Vpp_literal);

			pNewFuncPresetEncoderPos = &aFuncPresetEncoderPos[4];
			HAL_DAC_Stop_DMA(&hdac1, DAC1_CHANNEL_1);
			HAL_DAC_Start_DMA(&hdac1, DAC1_CHANNEL_1, (uint32_t*)aModdedDataTable, TRIANGLE_DATA_SIZE, DAC_ALIGN_12B_R);
			break;

		case IMPULSE_FUNC_MODE:

			pOriginalDataTable = unitimpulse_data_table_1300;

			VPP_ApplyPreset_Fast(VPP_GetVppPresetObject()->Vpp_literal);

			pNewFuncPresetEncoderPos = &aFuncPresetEncoderPos[5];
			HAL_DAC_Stop_DMA(&hdac1, DAC1_CHANNEL_1);
			HAL_DAC_Start_DMA(&hdac1, DAC1_CHANNEL_1, unitimpulse_data_table, UNITIMPULSE_DATA_SIZE,  DAC_ALIGN_12B_R);
			break;

	//
	}



}

void FuncO_SetNewDataTable(uint32_t * pdata_table)
{
	HAL_DAC_Stop_DMA(&hdac1, DAC1_CHANNEL_1);
	HAL_DAC_Start_DMA(&hdac1, DAC1_CHANNEL_1, pdata_table , SINE_DATA_SIZE, DAC_ALIGN_12B_R);
}


// TODO Add table data arrays to Func_Preset_Encoder_Pos_t so that it can be looked up with preset enum
/*
 *
 *	@brief Set function output preset by search
 *
 *	@param pPresetEnum search criteria. Should be one of the following:
 *
 *

 *	@retval None
 *
 */
void FuncO_ApplyPreset(eOutput_mode pPresetEnum)
{
/*	Func_Preset_Encoder_Pos_t * tmp = Func_FindFPresetObject(pPresetEnum);
	if(tmp)
	{

	}
	*/
}

/*
 *
 *	@brief Get currently set function output preset
 *
 *	@param None
 *	@retval pointer to Func_Preset_Encoder_Pos_t struct
 *
 */
Func_Preset_Encoder_Pos_t * FuncO_GetFPresetObject()
{
	return pNewFuncPresetEncoderPos;
}


/*
 *
 *	@brief Search array of structs for preset
 *
 *	@param Search criteria. Should be one of the following:
 *
 *	SINE_FUNC_MODE,
	SQUARE_FUNC_MODE,
	SAW_FUNC_MODE,
	REV_SAW_FUNC_MODE,
	TRIANGLE_FUNC_MODE,
	IMPULSE_FUNC_MODE

 *	@retval pointer to Func_Preset_Encoder_Pos_t struct
 *
 */
Func_Preset_Encoder_Pos_t * FuncO_FindFPresetObject(eOutput_mode pEnum)
{
	for(int i = 0; i < MAX_NUM_FUNC_PRESETS; i++ )
	{
		if(aFuncPresetEncoderPos[i].func == pEnum)
		{
			return &aFuncPresetEncoderPos[i];
		}
	}
	// error!
	DM_SetErrorDebugMsg("FuncO_FindFPresetObject(): no FPreset obj found");
	return 0;
}



/*
 *
 *	@brief	Get range value for rotary encoder
 *
 *	@param None
 *	@retval uint8_t
 *
 */
uint8_t FuncO_GetFuncPresetEncoderRange()
{
	return FuncPresetEncoderRange;
}



