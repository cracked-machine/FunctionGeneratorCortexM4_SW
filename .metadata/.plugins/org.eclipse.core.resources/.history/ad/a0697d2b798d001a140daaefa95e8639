/*
 * DisplayManager.c
 *
 *  Created on: 3 May 2020
 *      Author: chris
 */

#include "DisplayManager.h"

#include <stdint.h>
#include <stdio.h>
#include "ILI9341_STM32_Driver.h"
#include "ILI9341_GFX.h"
#include "rng.h"


#define BUTTON_WIDTH (ILI9341_SCREEN_WIDTH)/4
#define BUTTON_Y_POSITION ILI9341_SCREEN_HEIGHT-50

uint16_t border_size = 4;

uint16_t button_x_positions[4] = { border_size-1, (BUTTON_WIDTH)+1, (BUTTON_WIDTH*2)+1, (BUTTON_WIDTH*3)+1 };



void dm_update_display()
{

		// BLUE BUTTON GFX
		ILI9341_Draw_Filled_Rectangle_Coord(	button_x_positions[0] + (border_size),
												BUTTON_Y_POSITION + (border_size),
												(button_x_positions[0] + BUTTON_WIDTH) - (border_size),
												ILI9341_SCREEN_HEIGHT - (border_size),
												DARKCYAN);

		ILI9341_Draw_Bordered_Hollow_Rectangle_Coord(	button_x_positions[0],
														BUTTON_Y_POSITION,
														button_x_positions[0] + BUTTON_WIDTH,
														ILI9341_SCREEN_HEIGHT,
														BLACK,
														border_size);

		// GREEN BUTTON GFX
		ILI9341_Draw_Filled_Rectangle_Coord(	button_x_positions[1] + (border_size),
												BUTTON_Y_POSITION + (border_size),
												(button_x_positions[1] + BUTTON_WIDTH) - (border_size),
												ILI9341_SCREEN_HEIGHT - (border_size),
												DARKGREEN);

		ILI9341_Draw_Bordered_Hollow_Rectangle_Coord(	button_x_positions[1],
														BUTTON_Y_POSITION,
														button_x_positions[1] + BUTTON_WIDTH,
														ILI9341_SCREEN_HEIGHT,
														BLACK,
														border_size);

		// YELLOW BUTTON GFX
		ILI9341_Draw_Filled_Rectangle_Coord(	button_x_positions[2] + (border_size),
												BUTTON_Y_POSITION + (border_size),
												(button_x_positions[2] + BUTTON_WIDTH) - (border_size),
												ILI9341_SCREEN_HEIGHT - (border_size),
												YELLOW);

		ILI9341_Draw_Bordered_Hollow_Rectangle_Coord(	button_x_positions[2],
														BUTTON_Y_POSITION,
														button_x_positions[2] + BUTTON_WIDTH,
														ILI9341_SCREEN_HEIGHT,
														BLACK,
														border_size);

		// RED BUTTON GFX
		ILI9341_Draw_Filled_Rectangle_Coord(	button_x_positions[3] + (border_size),
												BUTTON_Y_POSITION + (border_size),
												(button_x_positions[3] + BUTTON_WIDTH) - (border_size),
												ILI9341_SCREEN_HEIGHT,
												RED);

		ILI9341_Draw_Bordered_Hollow_Rectangle_Coord(	button_x_positions[3],
														BUTTON_Y_POSITION,
														button_x_positions[3] + BUTTON_WIDTH,
														ILI9341_SCREEN_HEIGHT,
														BLACK,
														border_size);


	//dm_test_screen();
}

void dm_test_screen()
{
	  //----------------------------------------------------------FILLED CIRCLES EXAMPLE

	  			uint16_t xr = 0;
	  			uint16_t yr = 0;
	  			uint16_t radiusr = 0;
	  			uint16_t colourr = 0;
	  			xr = LL_RNG_ReadRandData32(RNG);
	  			yr = LL_RNG_ReadRandData32(RNG);
	  			radiusr = LL_RNG_ReadRandData32(RNG);
	  			colourr = LL_RNG_ReadRandData32(RNG);

	  			xr &= 0x01FF;
	  			yr &= 0x01FF;
	  			radiusr &= 0x001F;

	  			ILI9341_Draw_Filled_Circle(xr, yr, radiusr/2, colourr);

	  			char enc_buff[13] = "";
	  			snprintf(enc_buff, sizeof(enc_buff), "%d\n", new_enc_value);
	  			ILI9341_Draw_Text(enc_buff, 10, 20, BLACK, 5, WHITE);

	  			ILI9341_Draw_Text(control_pressed, 10, 60, BLACK, 5, WHITE);
	  		//HAL_Delay(1);
}
