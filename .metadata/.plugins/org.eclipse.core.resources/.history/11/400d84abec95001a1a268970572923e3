/*
 * VppOutput.h
 *
 *  Created on: 14 May 2020
 *      Author: chris
 */

#ifndef SRC_SIGNALMANAGER_VOLTPEAKPEAKOUTPUT_H_
#define SRC_SIGNALMANAGER_VOLTPEAKPEAKOUTPUT_H_

#include <stdint.h>

#include "pysine.h"

#define MAX_VPP_PRESETS 98
#define MAX_VPP_ENCODER_RANGE 392

uint32_t tmpDataTable[SINE_DATA_SIZE];

typedef enum
{
	VPP98 = 0U	,
	VPP97	,
	VPP96	,
	VPP95	,
	VPP94	,
	VPP93	,
	VPP92	,
	VPP91	,
	VPP90	,
	VPP89	,
	VPP88	,
	VPP87	,
	VPP86	,
	VPP85	,
	VPP84	,
	VPP83	,
	VPP82	,
	VPP81	,
	VPP80	,
	VPP79	,
	VPP78	,
	VPP77	,
	VPP76	,
	VPP75	,
	VPP74	,
	VPP73	,
	VPP72	,
	VPP71	,
	VPP70	,
	VPP69	,
	VPP68	,
	VPP67	,
	VPP66	,
	VPP65	,
	VPP64	,
	VPP63	,
	VPP62	,
	VPP61	,
	VPP60	,
	VPP59	,
	VPP58	,
	VPP57	,
	VPP56	,
	VPP55	,
	VPP54	,
	VPP53	,
	VPP52	,
	VPP51	,
	VPP50	,
	VPP49	,
	VPP48	,
	VPP47	,
	VPP46	,
	VPP45	,
	VPP44	,
	VPP43	,
	VPP42	,
	VPP41	,
	VPP40	,
	VPP39	,
	VPP38	,
	VPP37	,
	VPP36	,
	VPP35	,
	VPP34	,
	VPP33	,
	VPP32	,
	VPP31	,
	VPP30	,
	VPP29	,
	VPP28	,
	VPP27	,
	VPP26	,
	VPP25	,
	VPP24	,
	VPP23	,
	VPP22	,
	VPP21	,
	VPP20	,
	VPP19	,
	VPP18	,
	VPP17	,
	VPP16	,
	VPP15	,
	VPP14	,
	VPP13	,
	VPP12	,
	VPP11	,
	VPP10	,
	VPP09	,
	VPP08	,
	VPP07	,
	VPP06	,
	VPP05	,
	VPP04	,
	VPP03	,
	VPP02	,
	VPP01	,

} eVppPreset_t;


/*
 *	object for Vpp Preset and its encoder position for Vpp preset menu
 */
typedef struct
{
	eVppPreset_t Vpp_literal;
	float Vpp_target;
	uint8_t gain_preset;
	char* gain_decibels;
	float neg_gain_coeff;
	float vpp_offset;
	uint16_t epos;

} VppEncoderPreset_t;



VppEncoderPreset_t aVppEncoderPresets[MAX_VPP_PRESETS];

/*
 * 		The Currently Used Vpp Preset
 */
VppEncoderPreset_t* pVppEncoderPreset;




/*
 * 		Function declarations
 */

void VPP_ModifyOutput(uint16_t pEncoderValue);
void VPP_ApplyPreset_Fast(eVppPreset_t pPresetEnum);
//void VPP_ProcessDataTable(float _neg_gain_coeff, uint16_t _encoder_value);

VppEncoderPreset_t * VPP_FindVppPresetObject(eVppPreset_t pEnum);
VppEncoderPreset_t * VPP_GetVppPresetObject();





#endif /* SRC_SIGNALMANAGER_VOLTPEAKPEAKOUTPUT_H_ */
