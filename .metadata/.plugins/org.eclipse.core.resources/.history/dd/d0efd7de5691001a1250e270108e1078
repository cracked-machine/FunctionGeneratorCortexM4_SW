/*
 * EventManager.h
 *
 *  Created on: May 8, 2020
 *      Author: chris
 */

#ifndef SRC_EVENTMANAGER_EVENTMANAGER_H_
#define SRC_EVENTMANAGER_EVENTMANAGER_H_

#include <stdint.h>

#define EM_SWV_DEBUG

typedef enum
{
	Idle_State = 0x00U,		// main display
	Func_Menu_State


} eSystemState;

typedef enum
{
	evIdle,

	evFuncMenu,					// user presses blue "function" menu button
	evFuncSet,						// user turns rotary encoder in function menu

	evFreqMenu,					// user presses green "freq" menu button
	evFreqSet,

	evAmplMenu,					// user presses yellow "Ampl" menu button
	evAmplSet,

	evBiasMenu,					// user presses red "bias" menu button
	evBiasSet,

	evAdjustConfirmed				// user presses rotary encoder confirmation button

} eSystemEvent;

typedef enum
{
	Sine_Out_Mode,
	Square_Out_Mode,
	Saw_Out_Mode,
	RevSaw_Out_Mode,
	Triangle_Out_Mode,
	Impulse_Out_Mode

} eOutput_mode;


void EM_SetNewEvent(eSystemEvent pEvent);
void EM_ProcessEvent();
eOutput_mode EM_GetOutputMode();
void EM_SetEncoderValue(uint32_t pValue);
eSystemState EM_GetSystemState();

#endif /* SRC_EVENTMANAGER_EVENTMANAGER_H_ */
